package fun;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.openqa.selenium.By;

public class Accesschannel {

	public static void main(String[] args) throws FileNotFoundException {
		
		
		/*	driver.get("https://jira.urjanet.net/browse/"+tick);
		driver.findElement(By.id("login-form-username")).sendKeys("gopinath.rajendran");
		driver.findElement(By.id("login-form-password")).sendKeys("Gopikingston.3");
		driver.findElement(By.name("login")).click();
		
		// TODO Auto-generated method stub
		//File f = new File("/home/gopinath/t2");
	/*	String f = "houhijojp ijojo kinin";
		Scanner scan = new Scanner(f);
		scan.useDelimiter("[^A-Za-z]+");
		Scanner scan1 = new Scanner(f);
		scan1.useDelimiter("[^A-Za-z]+");
		int c = 0;
		int d =0;
		while(scan1.hasNextLine()) {	                  //loop condition to initialize array length
			Pattern p = Pattern.compile("	(.*?)	\\[");//Griping condition
		Matcher m1 = p.matcher(scan1.nextLine());
		System.out.println("hai");
	 while (m1.find()) {
		 c++;
	 }}
		//System.out.println(c);
		String[] channel=new String[c];
		while(scan.hasNextLine()) {	
		Pattern p = Pattern.compile("	(.*?)	\\[");//Griping condition
	    Matcher m = p.matcher(scan.nextLine());
 while (m.find()) {
	    String group = m.group();//passing a matching value to group string
		String ouy = group.replaceAll("\\s", "").replaceAll("\\[", "");
		channel[d]=ouy;
		d++;
		}//loop endings
	    }//loop end
		TreeSet<String> tree =new TreeSet<>();
		for(int i=0;i<channel.length;i++)
		{
			tree.add(channel[i]);
		}
		for(String out:tree)
		{
			System.out.println(out);
		}*/
		
	
		
	}//main class end
	
}// end

	


